{"version":3,"sources":["AllPets.js","NewPet.js","OnePet.js","EditPet.js","App.js","serviceWorker.js","index.js"],"names":["AllPets","props","state","pets","axios","get","then","res","setState","data","catch","err","console","log","to","className","scope","this","map","pet","key","_id","name","type","Component","NewPet","addPet","e","preventDefault","post","errors","errmsg","history","push","changeName","target","value","changeType","changeDescription","description","changeSkill1","skill1","changeSkill2","skill2","changeSkill3","skill3","onSubmit","placeholder","onChange","message","OnePet","Increase","match","params","likes","put","liked","localStorage","setItem","id","delete","disabled","onClick","deletePet","EditPet","editPet","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31fa2bc6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport {\nLink\n} from 'react-router-dom';\n\nclass AllPets extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n    pets: []\n    }\n}\n\ncomponentDidMount() {\n    axios.get(\"/api/pet\")\n    .then(res => this.setState({pets: res.data}))\n    .catch(err => console.log(err));\n}\n   \n \n\nrender() {\n    return (\n    <>\n    <h4>These pets are looking for a home!</h4>\n        <h5> <Link to={`/new`}>Add a pet to the shelter</Link></h5>\n        <table className= \"table table-striped\">\n        <thead>\n        <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Type</th>\n            <th scope=\"col\">Actions</th>\n        </tr>\n        </thead>\n        {\n        this.state.pets.map( pet => \n            <tbody key={pet._id}>\n            <tr >\n          \n            <td>{pet.name}</td>\n            <td>{pet.type}</td>\n            <td> <Link className=\"btn btn-info m-2\" to={`/pet/${pet._id}`}>Details</Link>  <Link className=\"btn btn-primary m-2\" to={`/pet/${pet._id}/edit`}>Edit</Link></td>\n            </tr>\n            </tbody>\n     \n        )\n        }\n        </table>\n    </>\n    );\n}\n}\nexport default AllPets;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport {\nLink\n} from 'react-router-dom';\n\nclass NewPet extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n    pet: {}, \n    errors: {\n        name: \"\",\n        type: \"\",\n        description: \"\"\n    },\n    err: \"\"\n    }\n}\n\naddPet = e => {\n    e.preventDefault();\n    axios.post(\"/api/pet\", this.state.pet)\n    .then(res => {\n        console.log(res);\n        if(res.data.errors ) {\n        this.setState({errors: res.data.errors});} \n        else if (res.data.errmsg){\n            this.setState({err: res.data.errmsg});\n        }\n        else {\n        this.props.history.push(\"/\");\n        }\n    })\n    .catch(err => console.log(err));\n}\n\nchangeName = e => {\n    this.setState({pet: {...this.state.pet, name:e.target.value}});\n}\n\nchangeType = e => {\n    this.setState({pet: {...this.state.pet, type:e.target.value}});\n}\nchangeDescription = e => {\n    this.setState({pet: {...this.state.pet, description:e.target.value}});\n}\nchangeSkill1 = e => {\n    this.setState({pet: {...this.state.pet, skill1:e.target.value}});\n}\nchangeSkill2 = e => {\n    this.setState({pet: {...this.state.pet, skill2:e.target.value}});\n}\nchangeSkill3 = e => {\n    this.setState({pet: {...this.state.pet, skill3:e.target.value}});\n}\n\nrender() {\n    return (\n    <>\n      \n        <h4>Know of a pet needing a home?</h4>\n        <form  onSubmit={this.addPet}>\n        Name:\n        <input \n            className=\"form-control\"\n            type=\"text\" \n            placeholder=\"Name\" \n            onChange={this.changeName}\n        />\n            {\n        this.state.errors.name ?\n        <span className=\"text-danger\">{this.state.errors.name.message}</span> :\n        \"\"\n        }\n        {\n        this.state.err !== \"\" ?\n        <span className=\"text-danger\">{this.state.err}</span> :\n        \"\"\n        }\n        <br/>\n        Type:\n        <input \n            className=\"form-control\"\n            type=\"Type\" \n            placeholder=\"Type\"\n            onChange={this.changeType}  \n        ></input>\n            {\n        this.state.errors.type ?\n        <span className=\"text-danger\">{this.state.errors.type.message}</span> :\n        \"\"\n        }\n        <br/>\n        Description:\n        <input \n            className=\"form-control\"\n            type=\"text\" \n            placeholder=\"Description\" \n            onChange={this.changeDescription}  \n        ></input>\n            {\n        this.state.errors.description ?\n        <span className=\"text-danger\">{this.state.errors.description.message}</span> :\n        \"\"\n        }\n        <br/>\n\n\n        <ul>\n            Skills (optional):\n            <li>Skills 1:\n            <input \n            className=\"form-control\"\n            type=\"text\" \n            placeholder=\"Skills\" \n            onChange={this.changeSkill1}  \n            ></input>\n            </li>\n            <br/>\n            <li>Skills 2:\n            <input \n            className=\"form-control\"\n            type=\"text\" \n            placeholder=\"Skills\" \n            onChange={this.changeSkill2}  \n            ></input>\n            </li>\n            <br/>\n            <li >Skills 3:\n            <input \n            className=\"form-control\"\n            type=\"text\" \n            placeholder=\"Skills\" \n            onChange={this.changeSkill3}  \n            ></input>\n            </li>\n            <br/>\n        </ul>\n        <div ><input className = \"btn btn-info\" type=\"submit\" value=\"Add pet\" /> <Link className = \"btn btn-info m-2\" to={`/`}>Cancel</Link></div>\n        </form>\n    </>\n    );\n}\n}\n\nexport default NewPet;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport {\nLink\n} from 'react-router-dom';\n\n\nclass OnePet extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n    pet: {},\n    errors: {},\n    liked: false\n    }\n}\n\ncomponentDidMount() {\n    let _id = this.props.match.params._id;\n    axios.get(`/api/pet/${_id}`)\n    .then(res => {\n        \n        this.setState({pet: res.data});\n        \n    })\n    .catch(err => console.log(err));\n}\n\n \nIncrease = () => {\n    \n    let _id = this.props.match.params._id;\n    console.log(this.state.pet.likes);\n    axios.put(`/api/pet/${_id}` , {likes:this.state.pet.likes + 1 })\n        .then(res => {\n        this.setState({pet: {...this.state.pet, likes: this.state.pet.likes + 1 } , liked:true});\n        localStorage.setItem(\"likes\",this.state.pet._id);\n        })\n        .catch(err => console.log(err));\n}\n\n\ndeletePet(id){\n\n    let _id = id\n    axios.delete(`/api/pet/${_id}` , this.state.pet)\n    .then(res => {\n        this.props.history.push(\"/\");\n    })\n    .catch(err => console.log(err));\n}\n\nrender() {\n    return (\n\n    <>\n    <Link className=\"m-2\" to={`/`}>Home</Link>\n        <fieldset className=\"scheduler-border\" >\n        <legend className=\"scheduler-border\">Details about {this.state.pet.name}</legend>\n        <p><strong>Pet Type:</strong> {this.state.pet.type}</p>\n        <p><strong>Description:</strong> {this.state.pet.description}</p>\n        <p><strong>Skills:</strong><br/>{this.state.pet.skill1}<br/>{this.state.pet.skill2}<br/>{this.state.pet.skill3}</p>\n        <p><strong>Likes:</strong> {this.state.pet.likes}</p>\n      \n    </fieldset>\n    { !this.state.liked? \n    <button className=\"btn btn-primary \"\n    onClick={this.Increase}\n    >Like this pet\n    </button> :\n\n    <button className=\"btn btn-primary \" \n    disabled\n    >Like this pet\n    </button>\n    }\n    <button className=\"btn btn-success m-2\" onClick={() => this.deletePet(this.state.pet._id) } >Adopt this pet!</button>\n    </>\n    );\n}\n  \n}\n\nexport default OnePet;\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport {\n    Link\n} from 'react-router-dom';\n\n\nclass EditPet extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n    pet: {\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        skill1:\"\",\n        skill2:\"\",\n        skill3:\"\",\n        likes:0\n    }, \n    errors: {\n        name: \"\",\n        type: \"\",\n        description: \"\"\n    },\n    err: \"\"\n    }\n}\n\ncomponentDidMount() {\n    let _id = this.props.match.params._id;\n    axios.get(`/api/pet/${_id}`)\n    .then(res => {\n        this.setState({pet: res.data});\n        \n    })\n    .catch(err => console.log(err));\n}\n\neditPet = e => {\n    e.preventDefault();\n    let _id = this.props.match.params._id;\n    axios.put(`/api/pet/${_id}/edit`, this.state.pet)\n    .then(res => {\n        console.log(res);\n        if(res.data.errors) {\n            this.setState({errors: res.data.errors});\n        } \n        else if (res.data.errmsg){\n            this.setState({err: res.data.errmsg});\n        }\n        else {\n            this.props.history.push(`/pet/${_id}`);\n        }\n    })\n    .catch(err => console.log(err));\n}\n\nchangeName = e => {\n    this.setState({pet: {...this.state.pet, name:e.target.value}});\n}\n\nchangeType = e => {\n    this.setState({pet: {...this.state.pet, type:e.target.value}});\n}\nchangeDescription = e => {\n    this.setState({pet: {...this.state.pet, description:e.target.value}});\n}\nchangeSkill1 = e => {\n    this.setState({pet: {...this.state.pet, skill1:e.target.value}});\n}\nchangeSkill2 = e => {\n    this.setState({pet: {...this.state.pet, skill2:e.target.value}});\n}\nchangeSkill3 = e => {\n    this.setState({pet: {...this.state.pet, skill3:e.target.value}});\n}\n\nrender() {\n    return (\n    <>\n      \n        <h4>Edit this pet</h4>\n        <form  onSubmit={this.editPet}>\n        Pet name:\n        <input \n            className=\"form-control\"\n            type=\"text\" \n            onChange={this.changeName}\n            value = {this.state.pet.name}\n        /> \n            {\n        this.state.errors.name ?\n        <span className=\"text-danger\">{this.state.errors.name.message}</span> :\n        \"\"\n        }\n        {\n        this.state.err !== \"\" ?\n        <span className=\"text-danger\">{this.state.err}</span> :\n        \"\"\n        }\n        <br/>\n        Pet type:\n        <input \n            className=\"form-control\"\n            type=\"text\" \n            onChange={this.changeType} \n            value = {this.state.pet.type} \n        />\n            {\n        this.state.errors.type ?\n        <span className=\"text-danger\">{this.state.errors.type.message}</span> :\n        \"\"\n        }\n        <br/>\n        Description:\n        <input \n            className=\"form-control\"\n            type=\"text\" \n            onChange = {this.changeDescription} \n            value = {this.state.pet.description} \n        />\n            {\n        this.state.errors.description ?\n        <span className=\"text-danger\">{this.state.errors.description.message}</span> :\n        \"\"\n        }\n        <br/>\n\n\n        <ul>\n            Skills (optional):\n            <li>Skills 1:\n            <input \n            className=\"form-control\"\n            type=\"text\" \n            onChange={this.changeSkill1} \n            value = {this.state.pet.skill1}  \n            /> \n            </li>\n            <br/>\n\n            <li>Skills 2:\n            <input \n            className=\"form-control\"\n            type=\"text\" \n            onChange={this.changeSkill2} \n            value = {this.state.pet.skill2}  \n            /> \n            </li>\n            <br/>\n\n            <li>Skills 3:\n            <input \n            className=\"form-control\"\n            type=\"text\" \n            onChange={this.changeSkill3} \n            value = {this.state.pet.skill3} \n            /> \n            </li>\n            <br/>\n            \n        </ul>\n        <div ><input className = \"btn btn-info p-2\" type=\"submit\" value=\"Edit pet\" /> <Link className = \"btn btn-info m-2\" to={`/`}>Cancel</Link></div>\n        </form>\n    </>\n    );\n}\n}\n\nexport default EditPet;","import React, { Component } from 'react';\nimport './App.css';\nimport AllPets from './AllPets';\nimport NewPet from './NewPet';\nimport OnePet from './OnePet';\nimport EditPet from './EditPet';\nimport {\n  BrowserRouter,\n  Route\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <h1 className=\"display-6\"> Pet Shelter</h1> \n        <div className=\"container-fluid text-center\">\n        <Route exact path=\"/\" component={AllPets} />\n        <Route path=\"/new\" component={NewPet} />\n        <Route exact path=\"/pet/:_id\" component={OnePet} /> \n        <Route path=\"/pet/:_id/edit\" component={EditPet} /> \n        </div>\n      </BrowserRouter>\n     \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}